DROP TABLE IF EXISTS HECHO_RENDIMIENTOACADEMICO CASCADE;
DROP TABLE IF EXISTS DIM_DETALLEMATRICULA CASCADE;
DROP TABLE IF EXISTS DIM_MATRICULA CASCADE;
DROP TABLE IF EXISTS DIM_ANOACADEMICO CASCADE;
DROP TABLE IF EXISTS DIM_GRADO CASCADE;
DROP TABLE IF EXISTS DIM_DOCENTE CASCADE;
DROP TABLE IF EXISTS DIM_CURSO CASCADE;
DROP TABLE IF EXISTS DIM_ALUMNO CASCADE;
DROP TABLE IF EXISTS DIM_GEOGRAFIA CASCADE;

CREATE TABLE DIM_DETALLEMATRICULA (
    KeyDetalleMatricula SERIAL PRIMARY KEY,
    condicion VARCHAR(25) NOT NULL,
    codDetalleMatricula INT NOT NULL
);

CREATE TABLE HECHO_RENDIMIENTOACADEMICO (
    KeyRendimientoAca SERIAL PRIMARY KEY,
    KeyAlumno INT NOT NULL,
    KeyDocente INT NOT NULL,
    KeyGeografia INT NOT NULL,
    KeyCurso INT NOT NULL,
    KeyGrado INT NOT NULL,
    KeyA単oAca INT NOT NULL,
    KeyMatricula INT NOT NULL,
    KeyDetalleMatricula INT NOT NULL,
    promedioFinal NUMERIC(10, 2) NOT NULL
);

CREATE TABLE DIM_MATRICULA (
    KeyMatricula SERIAL PRIMARY KEY,
    modalidad VARCHAR(50) NOT NULL,
    fechaMatricula DATE NOT NULL,
    codMatricula INT NOT NULL
);

CREATE TABLE DIM_ANOACADEMICO (
    KeyA単oAca SERIAL PRIMARY KEY,
    ano VARCHAR(10) NOT NULL,
    fechaInicio DATE NOT NULL,
    fechaFinal DATE NOT NULL,
    codAnoaca INT NOT NULL
);

CREATE TABLE DIM_GRADO (
    KeyGrado SERIAL PRIMARY KEY,
    grado VARCHAR(100) NOT NULL,
    edad_minima INT NOT NULL,
    edad_maxima INT NOT NULL,
    codGrado INT NOT NULL
);

CREATE TABLE DIM_DOCENTE (
    KeyDocente SERIAL PRIMARY KEY,
    docente VARCHAR(255) NOT NULL,
    sexo VARCHAR(20) NOT NULL,
    fechaNac DATE NOT NULL,
    gradoInst VARCHAR(255) NOT NULL,
    codDocente INT NOT NULL
);

CREATE TABLE DIM_CURSO (
    KeyCurso SERIAL PRIMARY KEY,
    curso VARCHAR(50) NOT NULL,
    area VARCHAR(100) NOT NULL,
    horasTeoricas INT NOT NULL,
    horasPracticas INT NOT NULL,
    codCurso INT NOT NULL
);

CREATE TABLE DIM_ALUMNO (
    KeyAlumno SERIAL PRIMARY KEY,
    alumno VARCHAR(255) NOT NULL,
    sexo VARCHAR(20) NOT NULL,
    fechaNac DATE NOT NULL,
    fechaIngreso DATE NOT NULL,
    codAlumno INT NOT NULL
);

CREATE TABLE DIM_GEOGRAFIA (
    KeyGeografia SERIAL PRIMARY KEY,
    Departamento VARCHAR(100) NOT NULL,
    Provincia VARCHAR(100) NOT NULL,
    Distrito VARCHAR(100) NOT NULL,
    codDepartamento INT NOT NULL,
    codProvincia INT NOT NULL,
    codDistrito INT NOT NULL
);

ALTER TABLE HECHO_RENDIMIENTOACADEMICO
    ADD CONSTRAINT FK_HECHO_REND_GEOGRAFIA
    FOREIGN KEY (KeyGeografia) REFERENCES DIM_GEOGRAFIA (KeyGeografia);

ALTER TABLE HECHO_RENDIMIENTOACADEMICO
    ADD CONSTRAINT FK_HECHO_REND_GRADO
    FOREIGN KEY (KeyGrado) REFERENCES DIM_GRADO (KeyGrado);

ALTER TABLE HECHO_RENDIMIENTOACADEMICO
    ADD CONSTRAINT FK_HECHO_REND_ANOACA
    FOREIGN KEY (KeyA単oAca) REFERENCES DIM_ANOACADEMICO (KeyA単oAca);

ALTER TABLE HECHO_RENDIMIENTOACADEMICO
    ADD CONSTRAINT FK_HECHO_REND_MATRICULA
    FOREIGN KEY (KeyMatricula) REFERENCES DIM_MATRICULA (KeyMatricula);

ALTER TABLE HECHO_RENDIMIENTOACADEMICO
    ADD CONSTRAINT FK_HECHO_REND_ALUMNO
    FOREIGN KEY (KeyAlumno) REFERENCES DIM_ALUMNO (KeyAlumno);

ALTER TABLE HECHO_RENDIMIENTOACADEMICO
    ADD CONSTRAINT FK_HECHO_REND_CURSO
    FOREIGN KEY (KeyCurso) REFERENCES DIM_CURSO (KeyCurso);

ALTER TABLE HECHO_RENDIMIENTOACADEMICO
    ADD CONSTRAINT FK_HECHO_REND_DOCENTE
    FOREIGN KEY (KeyDocente) REFERENCES DIM_DOCENTE (KeyDocente);

ALTER TABLE HECHO_RENDIMIENTOACADEMICO
    ADD CONSTRAINT FK_HECHO_REND_DETALLE_MATRICULA
    FOREIGN KEY (KeyDetalleMatricula) REFERENCES DIM_DETALLEMATRICULA (KeyDetalleMatricula);

CREATE EXTENSION IF NOT EXISTS postgres_fdw;
DROP SERVER IF EXISTS conexionOrigen CASCADE;

CREATE SERVER conexionOrigen FOREIGN DATA WRAPPER postgres_fdw OPTIONS (host '127.0.0.1', dbname 'BD_Colegio', port '5432');

DROP USER MAPPING IF EXISTS FOR postgres server conexionOrigen;

CREATE USER MAPPING FOR postgres SERVER conexionOrigen OPTIONS (user 'postgres', password '123a');

DROP SCHEMA IF EXISTS colegio CASCADE;

CREATE SCHEMA colegio;

IMPORT FOREIGN SCHEMA public FROM SERVER conexionOrigen INTO colegio;

SELECT * FROM colegio.Alumno;